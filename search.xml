<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>对hexo开发个人博客的介绍（一）---环境部署配置</title>
      <link href="/2022/08/07/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hexo%E9%83%A8%E7%BD%B2%E5%BC%80%E5%8F%91%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2022/08/07/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hexo%E9%83%A8%E7%BD%B2%E5%BC%80%E5%8F%91%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>本文主要用于记录，并使用hexo进行开发个人博客，并将博客部署到github page和vecal关联部署站点。</p> <span id="more"></span><h1 id="ji-ben-huan-jing-pei-zhi">基本环境配置</h1><ol><li>git工具</li><li>npm工具</li><li>node.js</li></ol><h2 id="cha-kan-huan-jing-pei-zhi" id="查看环境配置">查看环境配置</h2><p>在终端输入以下代码可以查看工具在电脑环境中的安装情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br><span class="line">git --version</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#如下</span></span><br><span class="line">cs@bogon Desktop % node -v</span><br><span class="line">npm -v</span><br><span class="line">git --version</span><br><span class="line">v16.16.0</span><br><span class="line">8.11.0</span><br><span class="line">git version 2.32.1 (Apple Git-133)</span><br><span class="line">cs@bogon Desktop %</span><br></pre></td></tr></table></figure><h2 id="an-zhuang-git-gong-ju" id="安装git工具">安装git工具</h2><p>查看此博客文档: <a href="https://blog.csdn.net/liuzehn/article/details/124313436">《三种常见的 Mac 安装 git 工具的方法》</a> 进行git工具的安装。</p><h2 id="an-zhuang-node-js" id="安装node-js">安装node.js</h2><p>查看此博客文档:   <a href="https://blog.csdn.net/w956443578w/article/details/124073146">《Mac 安装 node.js 及环境配置》</a> 进行node.js工具的安装。</p><h2 id="an-zhuang-npm-gong-ju" id="安装npm工具">安装npm工具</h2><p>node.js自带npm工具。</p><h1 id="bo-ke-bu-shu-gong-ju">博客部署工具</h1><h2 id="an-zhuang-hexo-bo-ke-gong-ju" id="安装hexo博客工具">安装hexo博客工具</h2><p>查看此博客文档:   <a href="https://blog.csdn.net/wapchief/article/details/54602515">《使用hexo+github免费搭建个人博客网站超详细教程》</a> 进行hexo的安装以及配置github page部署站点的基本信息。</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
          <category> 构建 </category>
          
          <category> 开发 </category>
          
          <category> 部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对hexo开发个人博客的介绍（二）---样式配置</title>
      <link href="/2022/08/07/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hexo%E5%B7%A5%E5%85%B7%E6%B7%BB%E5%8A%A0%E6%A0%B7%E5%BC%8F%E9%85%8D%E7%BD%AE/"/>
      <url>/2022/08/07/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hexo%E5%B7%A5%E5%85%B7%E6%B7%BB%E5%8A%A0%E6%A0%B7%E5%BC%8F%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>本文主要用于记录，通过对主题配置文件和站点配置文件的配置以及额外工具包的安装。</p> <span id="more"></span><p>参考文档</p><p>查看此博客文档:   <a href="https://blog.panoshu.top/blog/fbbe79ce/">《Hexo 博客免费部署方案以及 Vercel 托管并使用 CND 加速访问》</a></p><p>查看此博客文档: <a href="https://blog.panoshu.top/blog/cb27ab6f/">《Hexo 博客 NexT 主题设置之使用 HarmonyOS 字体》</a></p><p>查看此博客文档:   <a href="https://blog.panoshu.top/blog/9db7e29f/">《Hexo 博客 NexT 主题设置之 KaTex 公式与 Markdown 复杂表格》</a></p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
          <category> 开发 </category>
          
          <category> 样式 </category>
          
          <category> 控件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对hexo开发个人博客的介绍（三）---自动化部署脚本</title>
      <link href="/2022/08/07/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8python%E5%AE%8C%E6%88%90%E5%8D%9A%E5%AE%A2%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/"/>
      <url>/2022/08/07/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8python%E5%AE%8C%E6%88%90%E5%8D%9A%E5%AE%A2%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<p>本文主要用于记录，并使用python脚本进行自动化部署到github page和vecal关联部署站点。</p> <span id="more"></span><h1 id="python-jiao-ben-yuan-ma-ru-xia">Python脚本源码如下</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">导入标准路径库 Path 用于不同平台如win，mac路径的统一</span></span><br><span class="line"><span class="string">导入系统标准库 用于一些系统的调用</span></span><br><span class="line"><span class="string">导入系统补充哭 用于一些文件的解压缩拷贝</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> pathlib <span class="keyword">import</span> Path</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">#指令定义</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">op_call_ls =<span class="string">&#x27;ls -l&#x27;</span> </span><br><span class="line">op_call_cp =<span class="string">&#x27;cp&#x27;</span></span><br><span class="line">blog_post_dir =Path(<span class="string">&#x27;/Users/cs/Downloads/cs_workspace/cs_home_page/cs_hexo_blog/SVN_MAC_LOCAL/blog_hexo_github/source/_posts&#x27;</span>)</span><br><span class="line">blog_workspace_dir =Path(<span class="string">&#x27;/Users/cs/Downloads/cs_workspace/cs_home_page/cs_hexo_blog/SVN_MAC_LOCAL/blog_hexo_github&#x27;</span>)</span><br><span class="line">blog_generator=<span class="string">&#x27;hexo g &#x27;</span></span><br><span class="line">blog_deployment=<span class="string">&#x27;hexo d &#x27;</span></span><br><span class="line">blog_localwatch=<span class="string">&#x27;hexo s&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">#地址定义</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;workspace dirname: &quot;</span>+os.getcwd()) <span class="comment">#获取当前py脚本工作空间的路径</span></span><br><span class="line">current_path = os.path.dirname(__file__)  <span class="comment"># 获取当前py脚本的路径，并设置相对路径</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;current_path: &quot;</span>+current_path) <span class="comment">#打印当前相对路径的地址</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\n\n\n&quot;</span>) <span class="comment">#将指令输出的结果显示在窗口中</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">文件拷贝</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment">#进行文件拷贝</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">str_change</span>(<span class="params"><span class="built_in">str</span></span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="string">&#x27;bin&#x27;</span> <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">str</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        aa, bb = <span class="built_in">str</span>.split(<span class="string">&#x27;bin&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> aa + bb</span><br><span class="line">     </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func_copy</span>(<span class="params">primary_dir, target_dir</span>):  <span class="comment"># 拷贝方法 把原始文件夹的所有文件夹和文件 按照同样的名字拷贝到目标文件夹中</span></span><br><span class="line">    <span class="comment"># 遍历filepath下所有文件,包括目录</span></span><br><span class="line">    files = os.listdir(primary_dir)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> files:  <span class="comment"># i 是目录下的文件或文件夹</span></span><br><span class="line">        i = os.path.join(primary_dir, i)  <span class="comment"># 字符串拼接</span></span><br><span class="line">        i_new = os.path.join(target_dir, i)  <span class="comment"># 目标文件夹也要改变</span></span><br><span class="line">        <span class="keyword">if</span> os.path.isdir(i):  <span class="comment"># 如果是文件夹</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(i_new):  <span class="comment"># 如果没新建过 新建同名目标文件夹</span></span><br><span class="line">                os.makedirs(i_new)</span><br><span class="line">            func_copy(i, i_new)     <span class="comment"># 递归循环下一个目录 复制目录里面的内容</span></span><br><span class="line">        <span class="keyword">else</span>: <span class="comment"># 不是文件夹 文件 判断字符串是否有_bin 粘贴到指定位置 并且修改名字</span></span><br><span class="line">            oldname = i</span><br><span class="line">            newname = str_change(i_new)</span><br><span class="line">            <span class="built_in">print</span>(oldname)</span><br><span class="line">            <span class="built_in">print</span>(newname)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(newname): <span class="comment"># 如果文件不存在,存在了就不拷贝了</span></span><br><span class="line">                shutil.copyfile(oldname, newname)                     <span class="comment"># 复制文件</span></span><br><span class="line"></span><br><span class="line">func_copy(current_path,blog_post_dir)</span><br><span class="line"><span class="comment">#进一次对目录的拷贝</span></span><br><span class="line"><span class="comment"># output = os.popen(&#x27;cp -r &#x27;+current_path+&#x27; &#x27;+blog_post_dir) #执行一条指令，并将指令执行结果集给output</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\n\n\n&quot;</span>) <span class="comment">#将指令输出的结果显示在窗口中</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;changedir\n&quot;</span>) <span class="comment">#将指令输出的结果显示在窗口中</span></span><br><span class="line"><span class="comment"># #进行一次对工作目录的转换</span></span><br><span class="line">os.chdir(blog_workspace_dir)</span><br><span class="line"><span class="built_in">print</span>(os.getcwd())<span class="comment">#打印当前相对路径的地址)</span></span><br><span class="line"><span class="built_in">print</span>(os.listdir(os.getcwd()))</span><br><span class="line"></span><br><span class="line"><span class="comment">#进行博客生成</span></span><br><span class="line">output = os.popen(blog_generator) </span><br><span class="line"><span class="built_in">print</span>(output.read()) <span class="comment">#将指令输出的结果显示在窗口中</span></span><br><span class="line"><span class="comment">#进行博客本地预览</span></span><br><span class="line"><span class="comment"># output = os.popen(blog_localwatch) </span></span><br><span class="line"><span class="comment"># print(output.read()) #将指令输出的结果显示在窗口中</span></span><br><span class="line"><span class="comment">#进行博客部署到github</span></span><br><span class="line">output = os.popen(blog_deployment) </span><br><span class="line"><span class="built_in">print</span>(output.read()) <span class="comment">#将指令输出的结果显示在窗口中</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="yun-xing-python-jiao-ben">运行Python脚本</h1><p>在markdown文本的目录下，使用终端工具运行python脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./post_blog.py </span><br></pre></td></tr></table></figure><p>如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line">Last login: Mon Aug  8 00:21:49 on ttys009</span><br><span class="line">cs@bogon markdown_tmp % ./post_blog.py </span><br><span class="line">workspace <span class="built_in">dirname</span>: /Users/cs/Desktop/markdown_tmp</span><br><span class="line">current_path: .</span><br><span class="line"></span><br><span class="line">./如何使用python完成自动化部署.md</span><br><span class="line">/Users/cs/Downloads/cs_workspace/cs_home_page/cs_hexo_blog/SVN_MAC_LOCAL/blog_hexo_github/source/_posts/./如何使用python完成自动化部署.md</span><br><span class="line">./post_blog.py</span><br><span class="line">/Users/cs/Downloads/cs_workspace/cs_home_page/cs_hexo_blog/SVN_MAC_LOCAL/blog_hexo_github/source/_posts/./post_blog.py</span><br><span class="line">./如何使用hexo部署开发个人博客.md</span><br><span class="line">/Users/cs/Downloads/cs_workspace/cs_home_page/cs_hexo_blog/SVN_MAC_LOCAL/blog_hexo_github/source/_posts/./如何使用hexo部署开发个人博客.md</span><br><span class="line"></span><br><span class="line">/Users/cs/Downloads/cs_workspace/cs_home_page/cs_hexo_blog/SVN_MAC_LOCAL/blog_hexo_github</span><br><span class="line">[<span class="string">&#x27;.npmignore&#x27;</span>, <span class="string">&#x27;_config.next.yml&#x27;</span>, <span class="string">&#x27;scaffolds&#x27;</span>, <span class="string">&#x27;.DS_Store&#x27;</span>, <span class="string">&#x27;db.json&#x27;</span>, <span class="string">&#x27;source&#x27;</span>, <span class="string">&#x27;node_modules&#x27;</span>, <span class="string">&#x27;public&#x27;</span>, <span class="string">&#x27;package-lock.json&#x27;</span>, <span class="string">&#x27;package.json&#x27;</span>, <span class="string">&#x27;_config.yml&#x27;</span>, <span class="string">&#x27;.github&#x27;</span>, <span class="string">&#x27;_config.landscape.yml&#x27;</span>, <span class="string">&#x27;.deploy_git&#x27;</span>, <span class="string">&#x27;themes&#x27;</span>]</span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO  ==================================</span><br><span class="line">  ███╗   ██╗███████╗██╗  ██╗████████╗</span><br><span class="line">  ████╗  ██║██╔════╝╚██╗██╔╝╚══██╔══╝</span><br><span class="line">  ██╔██╗ ██║█████╗   ╚███╔╝    ██║</span><br><span class="line">  ██║╚██╗██║██╔══╝   ██╔██╗    ██║</span><br><span class="line">  ██║ ╚████║███████╗██╔╝ ██╗   ██║</span><br><span class="line">  ╚═╝  ╚═══╝╚══════╝╚═╝  ╚═╝   ╚═╝</span><br><span class="line">========================================</span><br><span class="line">NexT version 8.12.3</span><br><span class="line">Documentation: https://theme-next.js.org</span><br><span class="line">========================================</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Files loaded <span class="keyword">in</span> 701 ms</span><br><span class="line">INFO  Deleted: tags/Hexo/index.html</span><br><span class="line">INFO  Generated: atom.xml</span><br><span class="line">INFO  Generated: search.xml</span><br><span class="line">INFO  Generated: categories/博客/脚本/index.html</span><br><span class="line">INFO  Generated: tags/python/index.html</span><br><span class="line">INFO  Generated: 2022/08/07/如何使用python完成自动化部署/index.html</span><br><span class="line">INFO  Generated: tags/脚本/index.html</span><br><span class="line">INFO  Generated: tags/自动化部署/index.html</span><br><span class="line">INFO  Generated: tags/index.html</span><br><span class="line">INFO  Generated: about/index.html</span><br><span class="line">INFO  Generated: categories/index.html</span><br><span class="line">INFO  Generated: archives/2022/08/index.html</span><br><span class="line">INFO  Generated: archives/index.html</span><br><span class="line">INFO  Generated: 2022/08/07/如何使用hexo部署开发个人博客/index.html</span><br><span class="line">INFO  Generated: archives/2022/index.html</span><br><span class="line">INFO  Generated: categories/博客/index.html</span><br><span class="line">INFO  Generated: categories/博客/构建/index.html</span><br><span class="line">INFO  Generated: tags/hexo/index.html</span><br><span class="line">INFO  Generated: categories/博客/部署/index.html</span><br><span class="line">INFO  Generated: categories/博客/开发/index.html</span><br><span class="line">INFO  Generated: index.html</span><br><span class="line">INFO  20 files generated <span class="keyword">in</span> 321 ms</span><br><span class="line"></span><br><span class="line">Enumerating objects: 59, <span class="keyword">done</span>.</span><br><span class="line">Counting objects: 100% (59/59), <span class="keyword">done</span>.</span><br><span class="line">Delta compression using up to 12 threads</span><br><span class="line">Compressing objects: 100% (29/29), <span class="keyword">done</span>.</span><br><span class="line">Writing objects: 100% (42/42), 24.43 KiB | 4.07 MiB/s, <span class="keyword">done</span>.</span><br><span class="line">Total 42 (delta 17), reused 0 (delta 0), pack-reused 0</span><br><span class="line">remote: Resolving deltas: 100% (17/17), completed with 4 <span class="built_in">local</span> objects.</span><br><span class="line">To github.com:CShengC/CShengC.github.io.git</span><br><span class="line">   66196fc..1ee48a2  HEAD -&gt; main</span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO  ==================================</span><br><span class="line">  ███╗   ██╗███████╗██╗  ██╗████████╗</span><br><span class="line">  ████╗  ██║██╔════╝╚██╗██╔╝╚══██╔══╝</span><br><span class="line">  ██╔██╗ ██║█████╗   ╚███╔╝    ██║</span><br><span class="line">  ██║╚██╗██║██╔══╝   ██╔██╗    ██║</span><br><span class="line">  ██║ ╚████║███████╗██╔╝ ██╗   ██║</span><br><span class="line">  ╚═╝  ╚═══╝╚══════╝╚═╝  ╚═╝   ╚═╝</span><br><span class="line">========================================</span><br><span class="line">NexT version 8.12.3</span><br><span class="line">Documentation: https://theme-next.js.org</span><br><span class="line">========================================</span><br><span class="line">INFO  Deploying: git</span><br><span class="line">INFO  Clearing .deploy_git folder...</span><br><span class="line">INFO  Copying files from public folder...</span><br><span class="line">INFO  Copying files from extend <span class="built_in">dirs</span>...</span><br><span class="line">[master 1ee48a2] Site updated: 2022-08-08 00:44:52</span><br><span class="line"> 20 files changed, 2593 insertions(+), 294 deletions(-)</span><br><span class="line"> rename 2022/07/29/hello-world/index.html =&gt; <span class="string">&quot;2022/08/07/\345\246\202\344\275\225\344\275\277\347\224\250hexo\351\203\250\347\275\262\345\274\200\345\217\221\344\270\252\344\272\272\345\215\232\345\256\242/index.html&quot;</span> (70%)</span><br><span class="line"> create mode 100644 <span class="string">&quot;2022/08/07/\345\246\202\344\275\225\344\275\277\347\224\250python\345\256\214\346\210\220\350\207\252\345\212\250\345\214\226\351\203\250\347\275\262/index.html&quot;</span></span><br><span class="line"> rename archives/2022/&#123;07 =&gt; 08&#125;/index.html (91%)</span><br><span class="line"> rewrite atom.xml (86%)</span><br><span class="line"> create mode 100644 <span class="string">&quot;categories/\345\215\232\345\256\242/index.html&quot;</span></span><br><span class="line"> create mode 100644 <span class="string">&quot;categories/\345\215\232\345\256\242/\345\274\200\345\217\221/index.html&quot;</span></span><br><span class="line"> rename <span class="string">&quot;categories/\346\227\245\345\270\270/\347\224\237\346\264\273/index.html&quot;</span> =&gt; <span class="string">&quot;categories/\345\215\232\345\256\242/\346\236\204\345\273\272/index.html&quot;</span> (93%)</span><br><span class="line"> rename <span class="string">&quot;categories/\346\227\245\345\270\270/\351\232\217\346\203\263/index.html&quot;</span> =&gt; <span class="string">&quot;categories/\345\215\232\345\256\242/\350\204\232\346\234\254/index.html&quot;</span> (93%)</span><br><span class="line"> create mode 100644 <span class="string">&quot;categories/\345\215\232\345\256\242/\351\203\250\347\275\262/index.html&quot;</span></span><br><span class="line"> rewrite search.xml (86%)</span><br><span class="line"> rename <span class="string">&quot;categories/\346\227\245\350\256\260/index.html&quot;</span> =&gt; tags/python/index.html (93%)</span><br><span class="line"> rename <span class="string">&quot;categories/\346\227\245\345\270\270/index.html&quot;</span> =&gt; <span class="string">&quot;tags/\350\204\232\346\234\254/index.html&quot;</span> (93%)</span><br><span class="line"> create mode 100644 <span class="string">&quot;tags/\350\207\252\345\212\250\345\214\226\351\203\250\347\275\262/index.html&quot;</span></span><br><span class="line">Branch <span class="string">&#x27;master&#x27;</span> <span class="built_in">set</span> up to track remote branch <span class="string">&#x27;main&#x27;</span> from <span class="string">&#x27;git@github.com:CShengC/CShengC.github.io.git&#x27;</span>.</span><br><span class="line">INFO  Deploy <span class="keyword">done</span>: git</span><br><span class="line"></span><br><span class="line">cs@bogon markdown_tmp % </span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
          <category> 开发 </category>
          
          <category> 部署 </category>
          
          <category> 脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> python </tag>
            
            <tag> 脚本 </tag>
            
            <tag> 自动化部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用python进行用户啊画像词云图的生成---wordcloud</title>
      <link href="/2022/08/07/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8python%E5%AE%8C%E6%88%90%E7%94%A8%E6%88%B7%E8%AF%8D%E4%BA%91%E5%9B%BE%E7%9A%84%E7%94%9F%E6%88%90/"/>
      <url>/2022/08/07/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8python%E5%AE%8C%E6%88%90%E7%94%A8%E6%88%B7%E8%AF%8D%E4%BA%91%E5%9B%BE%E7%9A%84%E7%94%9F%E6%88%90/</url>
      
        <content type="html"><![CDATA[<p>本文主要用于记录，并使用python脚本进行用户画像的词云图的生成。</p> <span id="more"></span><h1 id="ji-ben-wen-jian">基本文件</h1><ol><li>词云图基本描述文本</li><li>词云图背景基本图片</li><li>词语分割库 jieba</li><li>科学计算库nump</li><li>数据可视化分析库matplotlib</li><li>词云库wordcloud</li></ol><p>使用以下代码进行安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pip install numpy</span><br><span class="line">pip install matplotlib</span><br><span class="line">pip install jieba</span><br><span class="line">pip install wordcloud</span><br></pre></td></tr></table></figure><h1 id="python-jiao-ben-yuan-ma">Python脚本源码</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 词云图</span></span><br><span class="line"><span class="comment"># pip install numpy</span></span><br><span class="line"><span class="comment"># pip install matplotlib</span></span><br><span class="line"><span class="comment"># pip install jieba</span></span><br><span class="line"><span class="comment"># pip install wordcloud</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> wordcloud <span class="keyword">import</span> WordCloud, ImageColorGenerator, STOPWORDS  <span class="comment"># 词云，颜色生成器，停止词</span></span><br><span class="line"><span class="keyword">import</span> jieba  <span class="comment"># 词语切割</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt  <span class="comment"># 数据可视化</span></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image  <span class="comment"># 处理图片</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np  <span class="comment"># 科学计算</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="comment"># print(os.getcwd())</span></span><br><span class="line">current_path = os.path.dirname(__file__)  <span class="comment"># 设置相对路径</span></span><br><span class="line"><span class="comment"># print(current_path)</span></span><br><span class="line"></span><br><span class="line">path_txt = <span class="string">&#x27;&#x27;</span>  <span class="comment"># 文本路径</span></span><br><span class="line">path_bg = <span class="string">&#x27;&#x27;</span>  <span class="comment"># 词云背景模板路径</span></span><br><span class="line">font_path = <span class="string">&quot;/System/Library/Fonts/PingFang.ttc&quot;</span>  <span class="comment"># 设置字体，可以显示中文</span></span><br><span class="line">file = <span class="built_in">open</span>(current_path+<span class="string">&#x27;/source/text_word.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">text = file.read()  <span class="comment"># 读入一个中文txt文件,gbk -&gt; utf-8</span></span><br><span class="line">words = jieba.lcut(text)  <span class="comment"># 使用jieba库分词,生成字符串</span></span><br><span class="line">string = <span class="string">&#x27; &#x27;</span>.join(words)  <span class="comment"># 使用join()方法，将分词生成的字符串以空格进行分割,生成词云时，字符串之间需要为空格</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(string))  <span class="comment"># 输出词量</span></span><br><span class="line"></span><br><span class="line">img = Image.<span class="built_in">open</span>(current_path+<span class="string">&#x27;/source/super_sayaren.png&#x27;</span>)  <span class="comment"># 打开图片</span></span><br><span class="line">img_array = np.array(img)  <span class="comment"># 将图片装换为数组</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置停止词</span></span><br><span class="line">stopwords = <span class="built_in">set</span>()</span><br><span class="line">content = [line.strip() <span class="keyword">for</span> line <span class="keyword">in</span> <span class="built_in">open</span>(</span><br><span class="line">    current_path+<span class="string">&#x27;/source/stopwords.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>).readlines()]</span><br><span class="line">stopwords.update(content)</span><br><span class="line">stopwords.add(<span class="string">&quot;不行&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置词云的背景，图片，字体大小等参数</span></span><br><span class="line">wc = WordCloud(</span><br><span class="line">    background_color= (<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>),  <span class="comment"># 设置显示内容在什么颜色内</span></span><br><span class="line">    width=<span class="number">1000</span>,  <span class="comment"># 设置图片宽,默认为400</span></span><br><span class="line">    height=<span class="number">500</span>,  <span class="comment"># 设置图片高,默认为200</span></span><br><span class="line">    mask=img_array,  <span class="comment"># 设置词云背景模板</span></span><br><span class="line">    font_path=font_path,  <span class="comment"># 设置字体路径</span></span><br><span class="line">    stopwords=stopwords,  <span class="comment"># 设置需要屏蔽的词，如果为空，则使用内置的STOPWORDS</span></span><br><span class="line">    scale=<span class="number">1.0</span>,  <span class="comment"># 图照比例进行放大画布，如设置为1.5，则长和宽都是原来画布的1.5倍</span></span><br><span class="line">    max_words=<span class="number">1000</span>,  <span class="comment"># max_words图片上显示的最大词语的个数</span></span><br><span class="line">    max_font_size=<span class="number">65</span>,  <span class="comment"># max_font_size为最大字体的大小</span></span><br><span class="line">    min_font_size=<span class="number">4</span>,  <span class="comment"># min_font_size为最小字体大小,默认为4</span></span><br><span class="line">    mode=<span class="string">&#x27;RGBA&#x27;</span>,  <span class="comment"># ,默认值RGB,当参数为“RGBA”并且background_color不为空时，背景为透明</span></span><br><span class="line">    relative_scaling=<span class="number">1</span>,  <span class="comment"># 词频和字体大小的关联性,默认值</span></span><br><span class="line">    collocations=<span class="literal">True</span>  <span class="comment"># 是否包括两个词的搭配</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">wc.generate_from_text(string)  <span class="comment"># 根据文本生成词云</span></span><br><span class="line"></span><br><span class="line">image_colors = ImageColorGenerator(img_array)  <span class="comment"># 获取color</span></span><br><span class="line"><span class="comment"># 按照给定的图片颜色布局生成字体颜色,当wordcloud尺寸比image大时，返回默认的颜色</span></span><br><span class="line">plt.imshow(wc.recolor(color_func=image_colors), interpolation=<span class="string">&quot;bilinear&quot;</span>)</span><br><span class="line"></span><br><span class="line">plt.axis(<span class="string">&#x27;off&#x27;</span>)  <span class="comment"># 关闭坐标轴</span></span><br><span class="line">plt.show()  <span class="comment"># 显示图片</span></span><br><span class="line">wc.to_file(current_path+<span class="string">&#x27;/source/word_cloud_super_sayaren.png&#x27;</span>)  <span class="comment"># 保存图片</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="yun-xing-python-jiao-ben">运行Python脚本</h1><p>在图片文本的目录下，使用终端工具运行python脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./user_wordcloud.py</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
          <category> 语言 </category>
          
          <category> 开发 </category>
          
          <category> 库 </category>
          
          <category> 运营 </category>
          
          <category> 用户画像 </category>
          
          <category> 设计 </category>
          
          <category> 词云图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 脚本 </tag>
            
            <tag> wordcloud </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
